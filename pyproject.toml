[tool.poetry]
name = "lido-oracle"
version = "6.0.0"
description = "Oracle daemon for Lido decentralized staking service. Collects and reports Ethereum 2.0 beacon chain states (the number of visible validators and their summarized balances) to the Lido dApp contract running on Ethereum 1.0 side."
authors = [
    "Dmitry Chernukhin",
    "Dmitry Suldin",
    "George Avsetsin",
    "Kirill Varlamov",
    "Raman Siamionau",
    "Roman Kolpakov",
    "Sergey Ivanenko",
    "Sergey Khomutinin",
    "Smelov Vladimir",
    "Vladimir Gorkavenko",
]
license = "GPL 3.0"

[tool.poetry.dependencies]
python = "^3.12"
prometheus-client = "0.21.1"
timeout-decorator = "^0.5.0"
pytest = "^7.2.1"
pytest-xdist = "^3.2.1"
more-itertools = "^10.1.0"
web3 = "^7.8.0"
web3-multi-provider = { version = "^2.2.1", extras = ["metrics"] }
json-stream = "^2.3.2"
oz-merkle-tree = { git = "https://github.com/lidofinance/oz-merkle-tree" }
py-multiformats-cid = "^0.4.4"
ssz = "^0.5.2"
py-ecc = "^8.0.0"

[tool.poetry.group.dev.dependencies]
base58 = "^2.1.1"
ipfshttpclient = "^0.7.0"
pydantic = "^2.4.0"
pytest-cov = "^4.0.0"
polyfactory = "^2.19.0"
# {{{ stubs for mypy
types-requests = "^2.28.11.15"
types-setuptools = "^67.6.0.0"
types-urllib3 = "^1.26.25.8"
# }}}
hypothesis = "^6.68.2"
black = "^24.8"
pylint = "^3.2.3"
mypy = "^1.10.0"
responses = "^0.25.7"
eth-tester = "^0.12.1b1"
pre-commit = "3.8"
ipython = "^9.0"
isort = "^6.0.1"
conventional-pre-commit = "^4.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "unit: tests with using mocks and don't make external requests",
    "integration: tests with using providers",
    "e2e: complex tests with using providers and real Ethereum network",
    "fork: tests with using forked Ethereum network",
    "mainnet: tests that depends on mainnet",
    "testnet: tests that depends on testnet",
]
addopts = "-s -vv --strict-markers"

[tool.coverage.run]
branch = true

[tool.pylint.format]
max-line-length = "120"
min-similarity-lines = 6

[tool.pylint."messages control"]
disable = [
    # Disabled by default
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    # Disabled by us
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "invalid-name",
    "unused-argument",
    "wrong-import-order",
    "ungrouped-imports",
    "line-too-long",
    "too-many-instance-attributes",
    "too-many-arguments",
    "too-many-locals",
    "unspecified-encoding",
    "bare-except",
    "fixme",
    "cell-var-from-loop",
    "invalid-envvar-default",
    "global-statement",
    "redefined-outer-name",
    "too-many-positional-arguments",
]

[tool.mypy]
python_version = "3.12"
strict_equality = true
mypy_path = "stubs"
disable_error_code = "valid-type,name-defined"

[[tool.mypy.overrides]]
module = "src.web3py.contract_tweak"
ignore_errors = true  # skipped because of extensive copy-paste from the upstream

[tool.black]
line-length = 120
skip-string-normalization = true
include = '\.pyi?$'
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 120

[tool.ruff.format]
quote-style = "preserve"

[tool.isort]
profile = "black"
combine_as_imports = true
