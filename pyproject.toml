[tool.poetry]
name = "lido-oracle"
version = "3.0.0"
description = "Oracle daemon for Lido decentralized staking service. Collects and reports Ethereum 2.0 beacon chain states (the number of visible validators and their summarized balances) to the Lido dApp contract running on Ethereum 1.0 side."
authors = [
    "Raman Siamionau",
    "Roman Kolpakov",
    "Vladimir Gorkavenko",
    "Sergey Khomutinin",
    "Sergey Ivanenko",
    "George Avsetsin",
    "Kirill Varlamov",
    "Smelov Vladimir",
    "Dmitry Suldin",
]
license = "GPL 3.0"

[tool.poetry.dependencies]
python = "^3.11"
web3 = "6.0.0b10"
prometheus-client = "^0.16.0"
web3-multi-provider = "^0.5.0"
timeout-decorator = "^0.5.0"
poetry = "^1.3.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.1"
base58 = "^2.1.1"
ipfshttpclient = "^0.7.0"
pylint = "^2.16.2"
mypy = "^1.0.1"
pytest-cov = "^4.0.0"
hypothesis = "^6.68.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
markers = [
    "unit: tests with using mocks and don't make external requests",
    "integration: tests with using providers",
    "possible_integration: tests with using providers, but can be run using mocks",
    "e2e: complex tests with using providers and real Ethereum network",
]

[tool.coverage.run]
branch = true

[tool.pylint."messages control"]
disable = [
    # Disabled by default
    "raw-checker-failed",
    "bad-inline-option",
    "locally-disabled",
    "file-ignored",
    "suppressed-message",
    "useless-suppression",
    "deprecated-pragma",
    "use-symbolic-message-instead",
    # Disabled by us
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "too-few-public-methods",
    "invalid-name",
    "line-too-long",
    "too-many-instance-attributes",
    "too-many-arguments",
    "unused-argument",
    "wrong-import-order",
    "ungrouped-imports",
    "too-many-locals",
    "unspecified-encoding",
    "bare-except",
    "fixme",
    "cell-var-from-loop",
    "invalid-envvar-default",
    "global-statement",
    "redefined-outer-name",
]

[tool.mypy]
strict_equality = true
